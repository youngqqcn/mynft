const { MerkleTree } = require('merkletreejs')
const SHA256 = require('crypto-js/sha256')

mp = [
    // "0000000000000000000000000000000000000000000000000000000000000005",
    // "0000000000000000000000000000000000000000000000000000000000000040",
    // "000000000000000000000000000000000000000000000000000000000000000a",
    "67161f7a3239e9494bbcf032a0674e58fc331d99a5e291a535eb754c6632fa04",
    "9dbdac64923342d6d3f0c9006e00ea46b86514b3af7d8616d1de9b395cf4a53f",
    "c9283a4307ea5c3ae04f6a75f8ca5cae50bf9899fef84268debbe6c03f082d65",
    "c0969b972ac43570a849f95b53587fae01e3db67b4ae89b4e277a5abd0eb0e93",
    "c62bc38181171b55c329e98d6392d2507ea2b4b98b304a6f46e414c93df07de7",
    "cd25ef1bd707d794bd883ddf991b12ccede2544c534ee8d1e29e8240a5a65320",
    "7988bca02ef5b9af458bf298b539a5c332c81c707574ebf3437094ef402d4654",
    "a3b4cebba608dc7fadbc59d8dd929cb6b2a7e89d7fdd467d3366847ddfe06fe9",
    "3433d5bbc813ccb3267300643604be505c6be495b6911783e92acb67c631ca35",
    "cd27eb49c9e49f8868a67d31c3af65fd93a4aef68c45b32ef707006d13586a13"]

proofs = []

for(let y = 0; y < mp.length; y++) {
    proofs.push( MerkleTree.bufferify(mp[y]) )
}

leaf = MerkleTree.bufferify("162311ee7fad5f88f930fc81a6c5107620615cc0")
root = MerkleTree.bufferify("4b5b319bb7c60c566ad81c5e7dad15283a51a07e039c74278a72dae5f46fc4ad")

const verified = MerkleTree.verify(proofs, leaf, root, SHA256 )
console.log(verified)